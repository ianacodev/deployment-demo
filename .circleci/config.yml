version: 2.1

defaults: &defaults
  docker:
    - image: cimg/node:18.12.1-browsers
  working_directory: ~/deployment-demo

orbs:
  browser-tools: circleci/browser-tools@1.4.1
  docker: circleci/docker@2.2.0

jobs:
  # setup
  setup:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: ng-project-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --force
      - save_cache:
          key: ng-project-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - persist_to_workspace:
          root: ~/deployment-demo
          paths:
            - .
  # lint
  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/deployment-demo
      - run:
          name: Lint
          command: npm run lint

  # unit-tests
  unit_tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/deployment-demo
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Check Chrome Install
          command: |
            google-chrome --version
            chromedriver --version
      - run:
          name: Unit Tests
          command: npm run test:ci

  # e2e-tests
  e2e_tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/deployment-demo
      - restore_cache:
          key: ng-project-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: E2E Tests
          command: npm run cypress:ci

  # build
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/deployment-demo
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: ~/deployment-demo
          paths:
            - .

  # build-and-push-docker-image
  build-and-push-docker-image:
    <<: *defaults
    executor: docker/docker
    steps:
      - setup_remote_docker
      - docker/check
      - docker/build:
          image: ianacodev/deployment-demo
      - docker/push:
          image: ianacodev/deployment-demo

workflows:
  build_deploy_pipeline:
    jobs:
      - setup
      - unit_tests:
          requires:
            - setup
      - build:
          requires:
            - unit_tests
      - build-and-push-docker-image:
          requires:
            - build
